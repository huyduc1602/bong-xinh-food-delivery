"use client";

import Image from 'next/image';
import { useState, useEffect } from 'react';
import { useSpring, useTrail, animated } from '@react-spring/web';
import { useInView } from 'react-intersection-observer';

export default function Home() {
    const [selectedImage, setSelectedImage] = useState<{ src: string, alt: string } | null>(null);
    const [scrolled, setScrolled] = useState(false);

    // Handle scroll for header background
    useEffect(() => {
        const handleScroll = () => {
            const isScrolled = window.scrollY > 50;
            setScrolled(isScrolled);
        };

        window.addEventListener('scroll', handleScroll, { passive: true });
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    // Animation hooks
    const [heroRef, heroInView] = useInView({
        threshold: 0.3,
        triggerOnce: true
    });

    const [menuRef, menuInView] = useInView({
        threshold: 0.2,
        triggerOnce: true
    });

    const [aboutRef, aboutInView] = useInView({
        threshold: 0.3,
        triggerOnce: true
    });

    const [contactRef, contactInView] = useInView({
        threshold: 0.2,
        triggerOnce: true
    });

    // Hero animations with enhanced timing
    const heroAnimation = useSpring({
        opacity: heroInView ? 1 : 0,
        transform: heroInView ? 'translateY(0px)' : 'translateY(50px)',
        config: { mass: 1, tension: 280, friction: 60 },
        delay: 200
    });

    const heroButtonsAnimation = useSpring({
        opacity: heroInView ? 1 : 0,
        transform: heroInView ? 'translateY(0px)' : 'translateY(30px)',
        config: { mass: 1, tension: 280, friction: 60 },
        delay: 600
    });

    // Menu items animation trail
    const menuItems = [
        { src: '/images/tra-tac.jpeg', alt: 'Tr√† T·∫Øc - Lemon Tea', title: 'Tr√† T·∫Øc', price: '15,000ƒë', badge: 'B√°n ch·∫°y' },
        { src: '/images/mi.jpeg', alt: 'M√¨ ƒê·∫∑c Bi·ªát - Special Noodles', title: 'M√¨ ƒê·∫∑c Bi·ªát', price: '30,000ƒë', badge: 'ƒê·∫∑c s·∫£n' }
    ];

    const menuTrail = useTrail(menuItems.length, {
        opacity: menuInView ? 1 : 0,
        transform: menuInView ? 'translateY(0px)' : 'translateY(50px)',
        config: { mass: 1, tension: 280, friction: 60 },
        delay: 200
    });

    // About section animation
    const aboutAnimation = useSpring({
        opacity: aboutInView ? 1 : 0,
        transform: aboutInView ? 'translateY(0px)' : 'translateY(40px)',
        config: { mass: 1, tension: 280, friction: 60 },
        delay: 100
    });

    // Contact section animation
    const contactAnimation = useSpring({
        opacity: contactInView ? 1 : 0,
        transform: contactInView ? 'translateY(0px)' : 'translateY(40px)',
        config: { mass: 1, tension: 280, friction: 60 }
    });

    // Contact info staggered animation
    const contactInfoItems = [
        { icon: 'üìç', text: 'An ƒê√†o, Tr√¢u Qu·ª≥, Gia L√¢m, H√† N·ªôi' },
        { icon: 'üìû', text: '+84 123 456 789' },
        { icon: '‚úâÔ∏è', text: 'contact@buihuyen.com' },
        { icon: 'üïí', text: 'M·ªü c·ª≠a: 8:00 - 22:00 h√†ng ng√†y' }
    ];

    const contactInfoTrail = useTrail(contactInfoItems.length, {
        opacity: contactInView ? 1 : 0,
        transform: contactInView ? 'translateX(0px)' : 'translateX(-20px)',
        config: { mass: 1, tension: 280, friction: 60 },
        delay: contactInView ? 400 : 0
    });

    const openModal = (src: string, alt: string) => {
        setSelectedImage({ src, alt });
        document.body.style.overflow = 'hidden';
    };

    const closeModal = () => {
        setSelectedImage(null);
        document.body.style.overflow = 'unset';
    };

    return (
        <main>
            {/* Header */}
            <header className={`sticky top-0 z-40 transition-all duration-300 ${scrolled
                    ? 'bg-white/95 backdrop-blur-lg shadow-lg py-3'
                    : 'bg-white/80 backdrop-blur-md shadow-sm py-4'
                }`}>
                <div className="max-w-7xl mx-auto px-4 flex items-center justify-between">
                    <div className="flex items-center">
                        <a href="/" className={`font-bold text-primary transition-all duration-300 ${scrolled ? 'text-xl' : 'text-2xl'
                            }`}>
                            B·ªëng <span className="text-secondary">Xinh</span>
                        </a>
                    </div>

                    <nav className="hidden md:flex space-x-8">
                        <a href="#home" className="text-dark hover:text-primary transition-colors">
                            Trang ch·ªß
                        </a>
                        <a href="#menu" className="text-dark hover:text-primary transition-colors">
                            Th·ª±c ƒë∆°n
                        </a>
                        <a href="#about" className="text-dark hover:text-primary transition-colors">
                            V·ªÅ ch√∫ng t√¥i
                        </a>
                        <a href="#contact" className="text-dark hover:text-primary transition-colors">
                            Li√™n h·ªá
                        </a>
                    </nav>

                    <div className="hidden md:block">
                        <a href="tel:+84123456789" className={`btn btn-primary transition-all duration-300 ${scrolled ? 'text-sm px-4 py-2' : 'text-base px-5 py-3'
                            }`}>
                            ƒê·∫∑t h√†ng ngay
                        </a>
                    </div>
                </div>
            </header>

            {/* Hero Section */}
            <section id="home" ref={heroRef} className="relative min-h-screen flex items-center justify-center bg-gradient-to-br from-primary/10 to-secondary/10">
                <div className="max-w-7xl mx-auto px-4 text-center">
                    <animated.div style={heroAnimation} className="max-w-4xl mx-auto">
                        <h1 className="text-5xl md:text-7xl font-bold text-secondary mb-6">
                            B·ªëng <span className="text-primary">Xinh</span>
                        </h1>
                        <p className="text-xl md:text-2xl text-gray-600 mb-8">
                            Kh√°m ph√° h∆∞∆°ng v·ªã ƒë·∫≠m ƒë√† c·ªßa tr√† t·∫Øc v√† m√¨ truy·ªÅn th·ªëng Vi·ªát Nam
                        </p>
                    </animated.div>
                    <animated.div style={heroButtonsAnimation} className="flex flex-col sm:flex-row gap-4 justify-center">
                        <a href="#menu" className="btn btn-primary text-lg px-8 py-4">
                            Xem th·ª±c ƒë∆°n
                        </a>
                        <a href="tel:+84123456789" className="btn btn-secondary text-lg px-8 py-4">
                            G·ªçi ƒë·∫∑t h√†ng
                        </a>
                    </animated.div>
                </div>
            </section>

            {/* Menu Section */}
            <section id="menu" ref={menuRef} className="py-20 bg-gray-50">
                <div className="max-w-7xl mx-auto px-4">
                    <div className="text-center mb-16">
                        <h2 className="text-4xl font-bold text-secondary mb-4">Th·ª±c ƒê∆°n ƒê·∫∑c Bi·ªát</h2>
                        <p className="text-gray-600 text-lg max-w-2xl mx-auto">
                            Kh√°m ph√° nh·ªØng m√≥n ƒÉn ƒë·∫∑c tr∆∞ng c·ªßa ch√∫ng t√¥i
                        </p>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto">
                        {menuTrail.map((style, index) => {
                            const item = menuItems[index];
                            return (
                                <animated.div
                                    key={index}
                                    style={style}
                                    className="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300"
                                >
                                    <div
                                        className="relative h-80 overflow-hidden cursor-pointer group"
                                        onClick={() => openModal(item.src, item.alt)}
                                    >
                                        <Image
                                            src={item.src}
                                            alt={item.alt}
                                            fill
                                            className="object-cover hover:scale-105 transition-transform duration-300"
                                        />
                                        <div className="absolute inset-0 bg-black/10 group-hover:bg-black/20 transition-colors duration-300"></div>
                                        <div className="absolute top-3 right-3 z-10">
                                            <span className="bg-primary text-white px-3 py-1 rounded-full text-sm font-semibold shadow-lg">
                                                {item.badge}
                                            </span>
                                        </div>
                                        <div className="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                            <div className="bg-white/90 text-gray-800 px-4 py-2 rounded-full font-semibold">
                                                üîç Xem chi ti·∫øt
                                            </div>
                                        </div>
                                    </div>

                                    <div className="p-6">
                                        <div className="flex justify-between items-start mb-3">
                                            <h3 className="text-2xl font-bold text-secondary">{item.title}</h3>
                                            <span className="text-2xl font-bold text-primary">{item.price}</span>
                                        </div>
                                        <p className="text-gray-600 mb-4 leading-relaxed">
                                            {item.title === 'Tr√† T·∫Øc'
                                                ? 'Tr√† t·∫Øc t∆∞∆°i, thanh m√°t v·ªõi v·ªã chua ng·ªçt h√†i h√≤a. Th·ª©c u·ªëng gi·∫£i nhi·ªát tuy·ªát v·ªùi cho ng√†y n·∫Øng n√≥ng.'
                                                : 'M√¨ t∆∞∆°i ƒë∆∞·ª£c ch·∫ø bi·∫øn theo c√¥ng th·ª©c truy·ªÅn th·ªëng, k·∫øt h·ª£p v·ªõi c√°c lo·∫°i topping ƒëa d·∫°ng v√† n∆∞·ªõc d√πng ƒë·∫≠m ƒë√†.'
                                            }
                                        </p>

                                        <button className="w-full bg-primary text-white py-3 px-6 rounded-lg font-semibold hover:bg-primary/90 transition-colors duration-300">
                                            ƒê·∫∑t ngay
                                        </button>
                                    </div>
                                </animated.div>
                            );
                        })}
                    </div>
                </div>
            </section>

            {/* About Section */}
            <section id="about" ref={aboutRef} className="py-20 bg-white">
                <div className="max-w-7xl mx-auto px-4">
                    <animated.div style={aboutAnimation} className="max-w-4xl mx-auto text-center">
                        <h2 className="text-4xl font-bold text-secondary mb-8">V·ªÅ Ch√∫ng T√¥i</h2>

                        <div className="grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
                            <div className="text-left">
                                <h3 className="text-2xl font-semibold text-secondary mb-4">C√¢u chuy·ªán c·ªßa B·ªëng Xinh</h3>
                                <p className="text-gray-600 mb-6 leading-relaxed">
                                    B·ªëng Xinh ra ƒë·ªùi t·ª´ t√¨nh y√™u v·ªõi ·∫©m th·ª±c truy·ªÅn th·ªëng Vi·ªát Nam. Ch√∫ng t√¥i mong mu·ªën mang ƒë·∫øn cho kh√°ch h√†ng nh·ªØng tr·∫£i nghi·ªám ·∫©m th·ª±c ƒë·∫≠m ƒë√†,
                                    g·ª£i nh·ªõ v·ªÅ h∆∞∆°ng v·ªã tu·ªïi th∆° v√† s·ª± ·∫•m √°p c·ªßa gia ƒë√¨nh.
                                </p>
                                <p className="text-gray-600 leading-relaxed">
                                    V·ªõi ƒë·ªôi ng≈© ƒë·∫ßu b·∫øp gi√†u kinh nghi·ªám v√† nguy√™n li·ªáu t∆∞∆°i ngon ƒë∆∞·ª£c ch·ªçn l·ªçc k·ªπ c√†ng,
                                    m·ªói m√≥n ƒÉn t·∫°i B·ªëng Xinh ƒë·ªÅu ƒë∆∞·ª£c ch·∫ø bi·∫øn v·ªõi t·∫•t c·∫£ t√¨nh y√™u v√† s·ª± t·∫≠n t√¢m.
                                </p>
                            </div>

                            <div className="bg-gradient-to-r from-primary/20 to-secondary/20 p-8 rounded-xl">
                                <div className="text-center">
                                    <div className="text-4xl mb-4">üè™</div>
                                    <h4 className="text-xl font-semibold text-secondary mb-2">Cam k·∫øt ch·∫•t l∆∞·ª£ng</h4>
                                    <p className="text-gray-600">
                                        Nguy√™n li·ªáu t∆∞∆°i ngon ‚Ä¢ Ch·∫ø bi·∫øn t·∫≠n t√¢m ‚Ä¢ Ph·ª•c v·ª• chu ƒë√°o
                                    </p>
                                </div>
                            </div>
                        </div>
                    </animated.div>
                </div>
            </section>

            {/* Call to Action */}
            <section className="py-20 bg-primary text-white">
                <div className="max-w-7xl mx-auto px-4 text-center">
                    <div className="max-w-3xl mx-auto">
                        <h2 className="text-4xl font-bold mb-6">
                            ƒê·∫∑t H√†ng Ngay H√¥m Nay!
                        </h2>
                        <p className="text-xl mb-8 text-white/80">
                            G·ªçi ngay ƒë·ªÉ th∆∞·ªüng th·ª©c nh·ªØng m√≥n ƒÉn ngon nh·∫•t t·∫°i B·ªëng Xinh
                        </p>
                        <div className="flex flex-col sm:flex-row gap-4 justify-center">
                            <a href="tel:+84123456789" className="bg-white text-primary px-8 py-4 rounded-lg font-semibold hover:bg-gray-100 transition-colors duration-300">
                                üìû G·ªçi ngay: +84 123 456 789
                            </a>
                            <a href="#menu" className="border-2 border-white text-white px-8 py-4 rounded-lg font-semibold hover:bg-white hover:text-primary transition-colors duration-300">
                                Xem th·ª±c ƒë∆°n
                            </a>
                        </div>
                    </div>
                </div>
            </section>

            {/* Contact Section */}
            <section id="contact" ref={contactRef} className="py-20 bg-gray-50">
                <div className="max-w-7xl mx-auto px-4">
                    <animated.div style={contactAnimation} className="max-w-4xl mx-auto">
                        <div className="text-center mb-12">
                            <h2 className="text-4xl font-bold text-secondary mb-4">Li√™n H·ªá</h2>
                            <p className="text-gray-600 text-lg">
                                H√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë·∫∑t m√≥n ho·∫∑c bi·∫øt th√™m th√¥ng tin
                            </p>
                        </div>

                        <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
                            <div>
                                <h3 className="text-2xl font-semibold text-secondary mb-6">Th√¥ng tin li√™n h·ªá</h3>
                                <div className="space-y-4">
                                    {contactInfoTrail.map((style, index) => (
                                        <animated.div
                                            key={index}
                                            style={style}
                                            className="flex items-center space-x-3"
                                        >
                                            <span className="text-primary text-xl">{contactInfoItems[index].icon}</span>
                                            <span className="text-gray-600">{contactInfoItems[index].text}</span>
                                        </animated.div>
                                    ))}
                                </div>
                            </div>

                            <div>
                                <h3 className="text-2xl font-semibold text-secondary mb-6">G·ª≠i tin nh·∫Øn</h3>
                                <form className="space-y-4">
                                    <div>
                                        <input
                                            type="text"
                                            placeholder="H·ªç v√† t√™n"
                                            className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                                        />
                                    </div>
                                    <div>
                                        <input
                                            type="tel"
                                            placeholder="S·ªë ƒëi·ªán tho·∫°i"
                                            className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                                        />
                                    </div>
                                    <div>
                                        <textarea
                                            placeholder="Tin nh·∫Øn"
                                            rows={4}
                                            className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent resize-none"
                                        ></textarea>
                                    </div>
                                    <button
                                        type="submit"
                                        className="w-full bg-primary text-white py-3 px-6 rounded-lg font-semibold hover:bg-primary/90 transition-colors duration-300"
                                    >
                                        G·ª≠i tin nh·∫Øn
                                    </button>
                                </form>
                            </div>
                        </div>
                    </animated.div>
                </div>
            </section>

            {/* Footer */}
            <footer className="bg-secondary text-white py-12">
                <div className="max-w-7xl mx-auto px-4">
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                        <div>
                            <h3 className="text-xl font-bold mb-4">B·ªëng Xinh</h3>
                            <p className="text-gray-300 mb-4">
                                Mang ƒë·∫øn cho b·∫°n nh·ªØng m√≥n ƒÉn ƒë·∫≠m ch·∫•t truy·ªÅn th·ªëng Vi·ªát Nam v·ªõi h∆∞∆°ng v·ªã tuy·ªát v·ªùi.
                            </p>
                        </div>

                        <div>
                            <h3 className="text-xl font-bold mb-4">Li√™n k·∫øt nhanh</h3>
                            <ul className="space-y-2">
                                <li><a href="#home" className="text-gray-300 hover:text-white transition-colors">Trang ch·ªß</a></li>
                                <li><a href="#menu" className="text-gray-300 hover:text-white transition-colors">Th·ª±c ƒë∆°n</a></li>
                                <li><a href="#about" className="text-gray-300 hover:text-white transition-colors">V·ªÅ ch√∫ng t√¥i</a></li>
                                <li><a href="#contact" className="text-gray-300 hover:text-white transition-colors">Li√™n h·ªá</a></li>
                            </ul>
                        </div>

                        <div>
                            <h3 className="text-xl font-bold mb-4">Li√™n h·ªá</h3>
                            <div className="space-y-2 text-gray-300">
                                <p>üìç 123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</p>
                                <p>üìû +84 123 456 789</p>
                                <p>‚úâÔ∏è contact@buihuyen.com</p>
                                <p>üïí M·ªü c·ª≠a: 8:00 - 22:00 h√†ng ng√†y</p>
                            </div>
                        </div>
                    </div>

                    <div className="border-t border-gray-600 mt-8 pt-8 text-center text-gray-400">
                        <p>&copy; 2024 B·ªëng Xinh. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    </div>
                </div>
            </footer>

            {/* Call Now Button - Fixed Position */}
            <div className="fixed right-6 bottom-6 z-50">
                <a
                    href="tel:+84123456789"
                    className="bg-primary hover:bg-primary/90 text-white p-4 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 group flex items-center space-x-2"
                >
                    <span className="text-2xl">üìû</span>
                    <span className="hidden group-hover:block text-sm font-medium">G·ªçi ngay</span>
                </a>
            </div>

            {/* Image Modal */}
            {selectedImage && (
                <div
                    className="fixed inset-0 z-[9999] bg-black/80 backdrop-blur-sm flex items-center justify-center p-4"
                    onClick={closeModal}
                >
                    <div className="relative max-w-4xl max-h-[90vh] w-full h-full flex items-center justify-center">
                        <div
                            className="relative w-full h-full max-h-[80vh]"
                            onClick={(e) => e.stopPropagation()}
                        >
                            <Image
                                src={selectedImage.src}
                                alt={selectedImage.alt}
                                fill
                                className="object-contain rounded-lg"
                                priority
                            />
                        </div>

                        {/* Close Button */}
                        <button
                            onClick={closeModal}
                            className="absolute top-4 right-4 bg-white/90 hover:bg-white text-gray-800 w-10 h-10 rounded-full flex items-center justify-center font-bold text-xl shadow-lg transition-all duration-300 hover:scale-110"
                        >
                            √ó
                        </button>

                        {/* Image Caption */}
                        <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-white/90 text-gray-800 px-6 py-3 rounded-full font-semibold shadow-lg">
                            {selectedImage.alt}
                        </div>
                    </div>
                </div>
            )}
        </main>
    );
}